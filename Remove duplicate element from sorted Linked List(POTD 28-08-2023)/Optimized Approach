/*
JAVA Simple and Optimized Approach:

1.Simply traverse the Linked List and check if the current node data is equal to the next node or not.

2. If yes, then update the next reference of the current node to the node which is next to next node.

3. If no, then just move the current pointer to next node.

4.Return Head and Smile , bcoz you have got the solution!!

5.T.C.: O(N) S.C.:O(1)


>>Java O(N) solution : Easy Few Lines Solution(Optimized One) :

*/

class GfG{

 //Function to remove duplicates from sorted linked list.
 Node removeDuplicates(Node head)
    {    
        if(head == null || head.next == null)
        return head;
        
        Node curr = head;
        
        while(curr.next!=null){
            if(curr.data == curr.next.data){
                curr.next = curr.next.next;
            }
            else
            curr=curr.next;
        }
        return head;
    }
}
